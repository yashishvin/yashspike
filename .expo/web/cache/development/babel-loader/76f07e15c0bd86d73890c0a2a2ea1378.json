{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\MenuView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Menudisplay from \"./Menudisplay\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar MenuView = function (_React$Component) {\n  _inherits(MenuView, _React$Component);\n\n  var _super = _createSuper(MenuView);\n\n  function MenuView(props) {\n    var _this;\n\n    _classCallCheck(this, MenuView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Nameoftheitem: \"\",\n      url: \"\",\n      Cost: 0.0,\n      OrderStatus: \"Order Placed\"\n    };\n    return _this;\n  }\n\n  _createClass(MenuView, [{\n    key: \"fetch\",\n    value: function fetch() {\n      var ar = {\n        Order: [{\n          \"name\": \"MCD\",\n          \"URL\": \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.newfoodmagazine.com%2Fwp-content%2Fuploads%2Fmcdonalds-750x450.jpg&imgrefurl=https%3A%2F%2Fwww.newfoodmagazine.com%2Farticle%2F94705%2Fmcdonalds-joins-the-plant-revolution%2F&tbnid=sUnW8kemQ3BibM&vet=12ahUKEwiPvqPsnobvAhXCRawKHWVmBIUQMygDegUIARDXAQ..i&docid=YHQN16Ip8-Q9bM&w=750&h=450&q=mcdonalds&safe=active&ved=2ahUKEwiPvqPsnobvAhXCRawKHWVmBIUQMygDegUIARDXAQ\",\n          \"OrderStatus\": 'order placed'\n        }]\n      };\n      var c = [];\n      c = ar.Order;\n      var i;\n      var disp = [];\n\n      for (i in c) {\n        console.log(\"this has been executed\");\n        disp.push(React.createElement(Menudisplay, {\n          name: c[i].name,\n          url: c[i].URL,\n          OrderStatus: c[i].OrderStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 16\n          }\n        }));\n      }\n\n      return disp;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.mainContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }\n      }, \"This is the Menu\"), this.fetch());\n    }\n  }]);\n\n  return MenuView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1\n  }\n});\nexport default MenuView;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/MenuView.js"],"names":["Menudisplay","React","Icon","MenuView","props","state","Nameoftheitem","url","Cost","OrderStatus","ar","Order","c","i","disp","console","log","push","name","URL","styles","mainContainer","fetch","Component","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,IAAP;;;IAGMC,Q;;;;;AAIJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,GAAG,EAAE,EAFM;AAGXC,MAAAA,IAAI,EAAE,GAHK;AAIXC,MAAAA,WAAW,EAAC;AAJD,KAAb;AAFiB;AAQlB;;;;WAkBD,iBACA;AACE,UAAIC,EAAE,GAAE;AACNC,QAAAA,KAAK,EAAC,CAAC;AACP,kBAAO,KADA;AAEP,iBAAM,iaAFC;AAGP,yBAAc;AAHP,SAAD;AADA,OAAR;AAOA,UAAIC,CAAC,GAAC,EAAN;AACAA,MAAAA,CAAC,GAACF,EAAE,CAACC,KAAL;AACA,UAAIE,CAAJ;AACA,UAAIC,IAAI,GAAC,EAAT;;AACA,WAAKD,CAAL,IAAUD,CAAV,EACA;AAAEG,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACDF,QAAAA,IAAI,CAACG,IAAL,CAAU,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAEL,CAAC,CAACC,CAAD,CAAD,CAAKK,IAAxB;AAA8B,UAAA,GAAG,EAAEN,CAAC,CAACC,CAAD,CAAD,CAAKM,GAAxC;AAA6C,UAAA,WAAW,EAAEP,CAAC,CAACC,CAAD,CAAD,CAAKJ,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACA;;AAEF,aAAOK,IAAP;AACA;;;WACD,kBAAS;AACP,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEM,MAAM,CAACC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,EAEI,KAAKC,KAAL,EAFJ,CADF;AAMD;;;;EAzDoBrB,KAAK,CAACsB,S;;AA4D7B,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAE/BJ,EAAAA,aAAa,EAAE;AACbK,IAAAA,IAAI,EAAE;AADO;AAFgB,CAAlB,CAAf;AAOA,eAAevB,QAAf","sourcesContent":["import Menudisplay from './Menudisplay'\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput, ScrollView } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nimport { Dimensions } from 'react-native';\r\n//using this component we get the data and pass it to the Menu displaycomponent Menudisplay which is responsible for displaying the Menu\r\nclass MenuView extends React.Component {\r\n\r\n  \r\n   \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Nameoftheitem: \"\",\r\n      url: \"\",\r\n      Cost: 0.0,\r\n      OrderStatus:\"Order Placed\"\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The fecth Api call to get the menu for the user goes here\r\n   * We want to keep the Api calls in here as the menu must be loaded as soon as the data is fetched from the API\r\n   *  \r\n   */\r\n  \r\n   /*componentDidMount()\r\n   {\r\n        \r\n    this._navListener = this.props.navigation.addListener('focus', () => {\r\n        this.GetInfo();\r\n    })\r\n   }*/\r\n  \r\n\r\n  \r\n  fetch()\r\n  {\r\n    var ar= {\r\n      Order:[{\r\n      \"name\":\"MCD\",\r\n      \"URL\":\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.newfoodmagazine.com%2Fwp-content%2Fuploads%2Fmcdonalds-750x450.jpg&imgrefurl=https%3A%2F%2Fwww.newfoodmagazine.com%2Farticle%2F94705%2Fmcdonalds-joins-the-plant-revolution%2F&tbnid=sUnW8kemQ3BibM&vet=12ahUKEwiPvqPsnobvAhXCRawKHWVmBIUQMygDegUIARDXAQ..i&docid=YHQN16Ip8-Q9bM&w=750&h=450&q=mcdonalds&safe=active&ved=2ahUKEwiPvqPsnobvAhXCRawKHWVmBIUQMygDegUIARDXAQ\",\r\n      \"OrderStatus\":'order placed'\r\n      }]\r\n    }\r\n    var c=[]\r\n    c=ar.Order\r\n    var i\r\n    var disp=[]\r\n    for (i in c)\r\n    { console.log(\"this has been executed\");\r\n     disp.push(<Menudisplay name={c[i].name} url={c[i].URL} OrderStatus={c[i].OrderStatus}/>)\r\n    }\r\n\r\n   return disp;\r\n  }\r\n  render() {\r\n    return (\r\n      <ScrollView style={styles.mainContainer} >\r\n         <Text>This is the Menu</Text>\r\n         {this.fetch()}\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  mainContainer: {\r\n    flex: 1\r\n  },\r\n});\r\n\r\nexport default MenuView;\r\n"]},"metadata":{},"sourceType":"module"}