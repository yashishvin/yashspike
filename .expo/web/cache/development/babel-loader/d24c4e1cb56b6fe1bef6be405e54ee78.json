{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\LoginView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport base64 from 'base-64';\n\nvar LoginView = function (_React$Component) {\n  _inherits(LoginView, _React$Component);\n\n  var _super = _createSuper(LoginView);\n\n  function LoginView(props) {\n    var _this;\n\n    _classCallCheck(this, LoginView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      permission: \"User\"\n    };\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_this));\n    _this.handleSignup = _this.handleSignup.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginView, [{\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      var _this2 = this;\n\n      fetch('https://mysqlcs639.cs.wisc.edu/login', {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.token) {\n          _this2.props.login(_this2.state.username, res.token);\n\n          if (_this2.state.permission == \"User\") {\n            console.log(\"the user page has been executed\");\n\n            _this2.props.navigation.navigate('UserView');\n          } else if (_this2.state.permission == \"Admin\") {\n            console.log(\"this is the page for the admin which is being executed\");\n\n            _this2.props.navigation.navigate('AdminView');\n          } else if (_this2.state.permission == \"Staff\") {\n            console.log(\"this is the staff page\");\n\n            _this2.props.navigation.navigate('StaffView');\n          }\n        } else {\n          alert(\"Incorrect username or password! Please try again.\");\n        }\n      });\n    }\n  }, {\n    key: \"handleSignup\",\n    value: function handleSignup() {\n      console.log(\"this is the button to handle the signup press\");\n      this.props.navigation.navigate('SignUp');\n      console.log(\"we are navigating\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.bigText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \"Badger Bytes\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, \"Welcome! Please login or signup to continue.\"), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Username\",\n        placeholderTextColor: \"#992a20\",\n        onChangeText: function onChangeText(username) {\n          return _this3.setState({\n            username: username\n          });\n        },\n        value: this.state.username,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Password\",\n        placeholderTextColor: \"#992a20\",\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.space,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          flexWrap: 'wrap'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"Login\",\n        onPress: this.handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.spaceHorizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        color: \"#942a21\",\n        style: styles.buttonInline,\n        title: \"Signup\",\n        onPress: this.handleSignup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return LoginView;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: \"700\",\n    marginBottom: 5\n  },\n  space: {\n    width: 20,\n    height: 20\n  },\n  spaceHorizontal: {\n    display: \"flex\",\n    width: 20\n  },\n  buttonInline: {\n    display: \"flex\"\n  },\n  input: {\n    width: 200,\n    padding: 10,\n    margin: 5,\n    height: 40,\n    borderColor: '#c9392c',\n    borderWidth: 1\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/LoginView.js"],"names":["React","base64","LoginView","props","state","username","password","permission","handleLogin","bind","handleSignup","fetch","method","headers","encode","then","res","json","token","login","console","log","navigation","navigate","alert","styles","container","bigText","space","input","setState","flexDirection","flexWrap","buttonInline","spaceHorizontal","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","width","height","display","padding","margin","borderColor","borderWidth"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\r\nimport base64 from 'base-64';\r\nclass LoginView extends React.Component{  \r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      permission: \"User\"//this needs to be set from the api \r\n    }\r\n\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleSignup = this.handleSignup.bind(this);\r\n  }\r\n\r\n\r\n   // This is a mock api which needs to be replaced by the api which we create\r\n  handleLogin() {\r\n    fetch('https://mysqlcs639.cs.wisc.edu/login', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': 'Basic ' + base64.encode(this.state.username + \":\" + this.state.password)\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.token) {\r\n          this.props.login(this.state.username, res.token);\r\n          //Code needed to be added to set the state of permission from the api \r\n          //check the permissions that the user has and navigate accordingly\r\n          if(this.state.permission==\"User\")\r\n          {console.log(\"the user page has been executed\")\r\n          this.props.navigation.navigate('UserView');\r\n          }\r\n          else if(this.state.permission==\"Admin\")\r\n          {console.log(\"this is the page for the admin which is being executed\")\r\n          this.props.navigation.navigate('AdminView');\r\n          }\r\n          else if(this.state.permission==\"Staff\")\r\n          {\r\n           console.log(\"this is the staff page\")\r\n           this.props.navigation.navigate('StaffView');\r\n          }\r\n        } else {\r\n          alert(\"Incorrect username or password! Please try again.\");\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Use React Navigation to switch to the Sign Up page.\r\n   */\r\n  handleSignup() {\r\n      console.log(\"this is the button to handle the signup press\")\r\n      this.props.navigation.navigate('SignUp');\r\n      console.log(\"we are navigating\")\r\n  }\r\n\r\n  /**\r\n   * Displays and collects the login information.\r\n   * \r\n   *\r\n   */\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.bigText}>Badger Bytes</Text>\r\n        <Text>Welcome! Please login or signup to continue.</Text>\r\n        <View style={styles.space} />\r\n        <TextInput style={styles.input}\r\n          underlineColorAndroid=\"transparent\"\r\n          placeholder=\"Username\"\r\n          placeholderTextColor=\"#992a20\"\r\n          onChangeText={(username) => this.setState({ username: username })}\r\n          value={this.state.username}\r\n          autoCapitalize=\"none\" />\r\n        <TextInput style={styles.input}\r\n          secureTextEntry={true}\r\n          underlineColorAndroid=\"transparent\"\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#992a20\"\r\n          onChangeText={(password) => this.setState({ password: password })}\r\n          value={this.state.password}\r\n          autoCapitalize=\"none\" />\r\n        <View style={styles.space} />\r\n        <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\r\n          <Button color=\"#942a21\" style={styles.buttonInline} title=\"Login\" onPress={this.handleLogin} />\r\n          <View style={styles.spaceHorizontal} />\r\n          <Button color=\"#942a21\" style={styles.buttonInline} title=\"Signup\" onPress={this.handleSignup} />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    bigText: {\r\n      fontSize: 32,\r\n      fontWeight: \"700\",\r\n      marginBottom: 5\r\n    },\r\n    space: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    spaceHorizontal: {\r\n      display: \"flex\",\r\n      width: 20\r\n    },\r\n    buttonInline: {\r\n      display: \"flex\"\r\n    },\r\n    input: {\r\n      width: 200,\r\n      padding: 10,\r\n      margin: 5,\r\n      height: 40,\r\n      borderColor: '#c9392c',\r\n      borderWidth: 1\r\n    }\r\n  });\r\n  \r\n  export default LoginView;\r\n  "]},"metadata":{},"sourceType":"module"}