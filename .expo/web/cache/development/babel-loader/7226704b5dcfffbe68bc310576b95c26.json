{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\CombinedViewS.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MenuasView from \"./MenuasView\";\nimport OrdersView from \"./OrdersView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar CombinedViewS = function (_React$Component) {\n  _inherits(CombinedViewS, _React$Component);\n\n  var _super = _createSuper(CombinedViewS);\n\n  function CombinedViewS(props) {\n    var _this;\n\n    _classCallCheck(this, CombinedViewS);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      token: \"\",\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CombinedViewS, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var TabNavigation = createBottomTabNavigator();\n      return React.createElement(TabNavigation.Navigator, {\n        tabBarOptions: {\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(TabNavigation.Screen, {\n        name: \"MenuasView\",\n        options: {\n          tabBarLabel: 'MenuasView',\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          },\n          tabBarIcon: function tabBarIcon(_ref) {\n            var tintColor = _ref.tintColor;\n            return React.createElement(Icon, {\n              name: \"running\",\n              color: tintColor,\n              size: 25,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 13\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(MenuasView, _extends({}, props, {\n          token: _this2.props.token,\n          username: _this2.props.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }\n        }));\n      }), React.createElement(TabNavigation.Screen, {\n        name: \"OrdersView\",\n        options: {\n          tabBarLabel: 'OrdersView',\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var tintColor = _ref2.tintColor;\n            return React.createElement(Icon, {\n              name: \"male\",\n              color: tintColor,\n              size: 25,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 13\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, function (props) {\n        return React.createElement(OrdersView, _extends({}, props, {\n          token: _this2.props.token,\n          username: _this2.props.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return CombinedViewS;\n}(React.Component);\n\nexport default CombinedViewS;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/CombinedViewS.js"],"names":["MenuasView","OrdersView","NavigationContainer","createBottomTabNavigator","createStackNavigator","React","Icon","CombinedViewS","props","state","token","username","TabNavigation","activeTintColor","inactiveTintColor","tabBarLabel","tabBarOptions","tabBarIcon","tintColor","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,UAAP;AACA,OAAOC,UAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,IAAP;;IACMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,QAAQ,EAAC;AAFE,KAAb;AAFkB;AAOnB;;;;WACA,kBACE;AAAA;;AAKC,UAAMC,aAAa,GAAGT,wBAAwB,EAA9C;AACC,aACC,oBAAC,aAAD,CAAe,SAAf;AACA,QAAA,aAAa,EAAE;AACbU,UAAAA,eAAe,EAAE,QADJ;AAEbC,UAAAA,iBAAiB,EAAE;AAFN,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,aAAD,CAAe,MAAf;AACA,QAAA,IAAI,EAAC,YADL;AAEC,QAAA,OAAO,EAAE;AACRC,UAAAA,WAAW,EAAE,YADL;AAERC,UAAAA,aAAa,EAAE;AACbH,YAAAA,eAAe,EAAE,QADJ;AAEbC,YAAAA,iBAAiB,EAAE;AAFN,WAFP;AAMRG,UAAAA,UAAU,EAAC;AAAA,gBAAEC,SAAF,QAAEA,SAAF;AAAA,mBACT,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,SAAX;AAAqB,cAAA,KAAK,EAAEA,SAA5B;AAAuC,cAAA,IAAI,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADS;AAAA;AANH,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,UAAAV,KAAK;AAAA,eAAE,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,UAAA,KAAK,EAAE,MAAI,CAACA,KAAL,CAAWE,KAAzC;AAAgD,UAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWG,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;AAAA,OAdP,CALF,EAqBA,oBAAC,aAAD,CAAe,MAAf;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAE;AACPI,UAAAA,WAAW,EAAE,YADN;AAGPC,UAAAA,aAAa,EAAE;AACbH,YAAAA,eAAe,EAAE,QADJ;AAEbC,YAAAA,iBAAiB,EAAE;AAFN,WAHR;AAONG,UAAAA,UAAU,EAAC;AAAA,gBAAEC,SAAF,SAAEA,SAAF;AAAA,mBACV,oBAAC,IAAD;AAAM,cAAA,IAAI,EAAC,MAAX;AAAkB,cAAA,KAAK,EAAEA,SAAzB;AAAoC,cAAA,IAAI,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AAPL,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcE,UAAAV,KAAK;AAAA,eAAI,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,UAAA,KAAK,EAAE,MAAI,CAACA,KAAL,CAAWE,KAAzC;AAAgD,UAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWG,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OAdP,CArBA,CADD;AAwCJ;;;;EAxD2BN,KAAK,CAACc,S;;AAkElC,eAAeZ,aAAf","sourcesContent":["import MenuasView from './MenuasView';\r\nimport OrdersView from './OrdersView';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { TouchableOpacity, Image, View, Text } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nclass CombinedViewS extends React.Component\r\n{ constructor(props){\r\n  super(props)\r\n  this.state = {\r\n    token:\"\",\r\n    username:\"\"\r\n  }\r\n\r\n}\r\n render()\r\n   {\r\n    // The combined view for the Staff is defined here\r\n  //Two tabs are defined here the first tab for viewing and editing the given menu code for this can be found in MenuasView.js this file is common for both the admin and staff\r\n  //The second tab OrdersView is a file defined for the restraunt staff where the staff can change the state of the order code for this can be found in OrdersView.js\r\n\r\n    const TabNavigation = createBottomTabNavigator();\r\n     return(\r\n      <TabNavigation.Navigator\r\n      tabBarOptions={{\r\n        activeTintColor: 'tomato',\r\n        inactiveTintColor: 'gray',\r\n      }}>\r\n        <TabNavigation.Screen\r\n        name=\"MenuasView\"\r\n         options={{\r\n          tabBarLabel: 'MenuasView',\r\n          tabBarOptions: {\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          },\r\n          tabBarIcon:({tintColor})=>(  \r\n            <Icon name=\"running\" color={tintColor} size={25}/>  \r\n        )  \r\n          \r\n        }}\r\n      >\r\n         {props=><MenuasView {...props} token={this.props.token} username={this.props.username}/>}\r\n         </TabNavigation.Screen>\r\n      <TabNavigation.Screen\r\n        name=\"OrdersView\"\r\n        options={{\r\n          tabBarLabel: 'OrdersView',\r\n        \r\n          tabBarOptions: {\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          },\r\n           tabBarIcon:({tintColor})=>(  \r\n            <Icon name=\"male\" color={tintColor} size={25}/>  \r\n        )  \r\n          \r\n        }}\r\n      >{props => <OrdersView {...props} token={this.props.token} username={this.props.username} />}\r\n      </TabNavigation.Screen>\r\n    </TabNavigation.Navigator>\r\n       );\r\n}\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default CombinedViewS;"]},"metadata":{},"sourceType":"module"}