{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\Menudisplay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Card, ListItem } from 'react-native-elements';\n\nvar Menudisplay = function (_React$Component) {\n  _inherits(Menudisplay, _React$Component);\n\n  var _super = _createSuper(Menudisplay);\n\n  function Menudisplay(props) {\n    var _this;\n\n    _classCallCheck(this, Menudisplay);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Menudisplay, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"the name of the dish is\" + this.props.name);\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 10\n        }\n      }, React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, \"The name of the dish is: \", this.props.name)), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }\n      }, \"Order Status: \", this.props.OrderStatus), React.createElement(Image, {\n        source: {\n          uri: this.props.url\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      })));\n    }\n  }]);\n\n  return Menudisplay;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1\n  }\n});\nexport default Menudisplay;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/Menudisplay.js"],"names":["React","Icon","Card","ListItem","Menudisplay","props","state","firstName","lastName","console","log","name","OrderStatus","uri","url","Component","styles","StyleSheet","create","mainContainer","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,OAAOC,IAAP;;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA8B,uBAA9B;;IAEMC,W;;;;;AAMJ,uBAAYC,KAAZ,EACA;AAAA;;AAAA;;AAEE,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAHF;AAOC;;;;WACD,kBACI;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA0B,KAAKL,KAAL,CAAWM,IAAjD;AACH,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgC,KAAKN,KAAL,CAAWM,IAA3C,CAAZ,CADK,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqB,KAAKN,KAAL,CAAWO,WAAhC,CAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAC,KAAKR,KAAL,CAAWS;AAAhB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADH,CADF;AAUD;;;;EA3BuBd,KAAK,CAACe,S;;AA8BhC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAE/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,IAAI,EAAE;AADO;AAFgB,CAAlB,CAAf;AAOA,eAAehB,WAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, Button, TextInput, ScrollView,Image } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nimport { Dimensions } from 'react-native';\r\nimport { Card, ListItem} from 'react-native-elements';\r\n//This component is responsible for the components to be displayed on the menu page\r\nclass Menudisplay extends React.Component {\r\n\r\n  /**\r\n   * Specifies the default values that will be shown for a split second\r\n   * while data is loading in from the server.\r\n   */\r\n  constructor(props) \r\n  {\r\n    \r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n    }\r\n  }\r\n  render() \r\n      {console.log(\"the name of the dish is\"+this.props.name);\r\n    return (\r\n      <View>\r\n         <Card>\r\n    <Card.Title><Text>The name of the dish is: {this.props.name}</Text></Card.Title>\r\n             <Text>Order Status: {this.props.OrderStatus}</Text> \r\n             <Image source={{uri:this.props.url}}\r\n               />\r\n     </Card>\r\n       </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  \r\n  mainContainer: {\r\n    flex: 1\r\n  },\r\n});\r\n\r\nexport default Menudisplay;\r\n"]},"metadata":{},"sourceType":"module"}