{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport LoginView from \"./LoginView\";\nimport SignupView from \"./SignupView\";\nimport CombinedViewA from \"./CombinedViewA\";\nimport CombinedViewS from \"./CombinedViewS\";\nimport CombinedViewU from \"./CombinedViewU\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      accessToken: undefined,\n      username: undefined\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    _this.revokeAccessToken = _this.revokeAccessToken.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"login\",\n    value: function login(username, accessToken) {\n      this.setState({\n        username: username,\n        accessToken: accessToken\n      });\n      console.log(\"the state to which the token is being set to is\" + accessToken);\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function revokeAccessToken() {\n      console.log(\"this is executed on the click of the Icon\");\n      this.setState({\n        accessToken: undefined\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var AuthStack = createStackNavigator();\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, React.createElement(AuthStack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(React.Fragment, null, React.createElement(AuthStack.Screen, {\n        name: \"SignIn\",\n        options: {\n          title: 'Badger Bytes Signin Page'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(LoginView, _extends({}, props, {\n          login: _this2.login,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }\n        }));\n      }), React.createElement(AuthStack.Screen, {\n        name: \"SignUp\",\n        options: {\n          title: 'Badger Bytes Signup Page'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(SignupView, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }\n        }));\n      }), React.createElement(AuthStack.Screen, {\n        name: \"UserView\",\n        options: {\n          title: 'Badger Bytes User Page'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(CombinedViewU, {\n          token: _this2.state.accessToken,\n          username: _this2.state.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }\n        });\n      }), React.createElement(AuthStack.Screen, {\n        name: \"StaffView\",\n        options: {\n          title: 'Badger Bytes Staff Page'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(CombinedViewS, {\n          token: _this2.state.accessToken,\n          username: _this2.state.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 28\n          }\n        });\n      }), React.createElement(AuthStack.Screen, {\n        name: \"AdminView\",\n        options: {\n          title: 'Badger Bytes Admin Page'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }, function (props) {\n        return React.createElement(CombinedViewA, {\n          token: _this2.state.accessToken,\n          username: _this2.state.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/App.js"],"names":["React","LoginView","SignupView","CombinedViewA","CombinedViewS","CombinedViewU","NavigationContainer","createStackNavigator","Ionicons","Icon","App","props","state","accessToken","undefined","username","login","bind","revokeAccessToken","setState","console","log","AuthStack","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LoginView from './LoginView';\r\nimport SignupView from './SignupView';\r\nimport CombinedViewA from './CombinedViewA';\r\nimport CombinedViewS from './CombinedViewS';\r\nimport CombinedViewU from './CombinedViewU';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nimport { TouchableOpacity, Image, View, Text } from 'react-native';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accessToken: undefined,\r\n      username: undefined\r\n    }\r\n\r\n    this.login = this.login.bind(this);\r\n    this.revokeAccessToken = this.revokeAccessToken.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Store the username and accessToken here so that it can be\r\n   * passed down to each corresponding child view.\r\n   */\r\n  login(username, accessToken) {\r\n    this.setState({\r\n      username: username,\r\n      accessToken: accessToken\r\n    });\r\n    console.log(\"the state to which the token is being set to is\"+accessToken);\r\n  }\r\n\r\n  revokeAccessToken() {\r\n    console.log(\"this is executed on the click of the Icon\")\r\n    this.setState({\r\n      accessToken: undefined\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n//intitializing the stack navigator\r\n //below on one stack we have the signin page,signup page and the combined view pages for the adminstrator,User and the staff defined\r\n //CombineViewU,CombineViewA,CombinedViewS are three components which have the tab naviagots defined for the User,Admin,Staff respectively\r\n    let AuthStack = createStackNavigator();\r\n   \r\n\r\n    return (\r\n      <NavigationContainer>\r\n        <AuthStack.Navigator>\r\n          {\r\n            <>\r\n              <AuthStack.Screen\r\n                name=\"SignIn\"\r\n                options={{\r\n                  title: 'Badger Bytes Signin Page',\r\n                }}\r\n              >\r\n                {(props) => <LoginView {...props} login={this.login} />}\r\n              </AuthStack.Screen>\r\n\r\n              <AuthStack.Screen\r\n                name=\"SignUp\"\r\n                options={{\r\n                  title: 'Badger Bytes Signup Page',\r\n                }}\r\n              >\r\n                {(props) => <SignupView {...props} />}\r\n              </AuthStack.Screen>\r\n              <AuthStack.Screen\r\n                name=\"UserView\"\r\n                options={{\r\n                  title: 'Badger Bytes User Page',\r\n                }}\r\n              >\r\n                {(props) => <CombinedViewU token={this.state.accessToken} username={this.state.username}/>}\r\n              </AuthStack.Screen>\r\n              <AuthStack.Screen\r\n                name=\"StaffView\"\r\n                options={{\r\n                  title: 'Badger Bytes Staff Page',\r\n                }}\r\n              >\r\n                {(props) =><CombinedViewS token={this.state.accessToken} username={this.state.username} />}\r\n              </AuthStack.Screen>\r\n              <AuthStack.Screen\r\n                name=\"AdminView\"\r\n                options={{\r\n                  title: 'Badger Bytes Admin Page',\r\n                }}\r\n              >\r\n                {(props) =><CombinedViewA token={this.state.accessToken} username={this.state.username}/>}\r\n              </AuthStack.Screen>\r\n            </>\r\n         }\r\n        </AuthStack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}