{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\aus10\\\\Downloads\\\\Spike\\\\CombinedViewU.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport MenuView from \"./MenuView\";\nimport ProfileView from \"./ProfileView\";\nimport OrderView from \"./OrderView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/FontAwesome5\";\n\nvar CombinedViewU = function (_React$Component) {\n  _inherits(CombinedViewU, _React$Component);\n\n  var _super = _createSuper(CombinedViewU);\n\n  function CombinedViewU(props) {\n    var _this;\n\n    _classCallCheck(this, CombinedViewU);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      token: \"\",\n      username: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CombinedViewU, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"the combine view for the user has been called\");\n      var TabNavigation = createBottomTabNavigator();\n      return React.createElement(TabNavigation.Navigator, {\n        tabBarOptions: {\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(TabNavigation.Screen, {\n        name: \"MenuView\",\n        options: {\n          tabBarLabel: 'MenuView',\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(MenuView, _extends({}, props, {\n          token: _this2.props.token,\n          username: _this2.props.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }\n        }));\n      }), React.createElement(TabNavigation.Screen, {\n        name: \"OrderView\",\n        options: {\n          tabBarLabel: 'OrderView',\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          },\n          tabBarIcon: function tabBarIcon(_ref) {\n            var tintColor = _ref.tintColor;\n            return React.createElement(Icon, {\n              name: \"running\",\n              color: tintColor,\n              size: 25,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 13\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, function (props) {\n        return React.createElement(OrderView, _extends({}, props, {\n          token: _this2.props.token,\n          username: _this2.props.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }\n        }));\n      }), React.createElement(TabNavigation.Screen, {\n        name: \"ProfileView\",\n        options: {\n          tabBarLabel: 'ProfileView',\n          tabBarOptions: {\n            activeTintColor: 'tomato',\n            inactiveTintColor: 'gray'\n          },\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var tintColor = _ref2.tintColor;\n            return React.createElement(Icon, {\n              name: \"male\",\n              color: tintColor,\n              size: 25,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, function (props) {\n        return React.createElement(ProfileView, _extends({}, props, {\n          token: _this2.props.token,\n          username: _this2.props.username,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 18\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return CombinedViewU;\n}(React.Component);\n\nexport default CombinedViewU;","map":{"version":3,"sources":["C:/Users/aus10/Downloads/Spike/CombinedViewU.js"],"names":["MenuView","ProfileView","OrderView","NavigationContainer","createBottomTabNavigator","createStackNavigator","React","Icon","CombinedViewU","props","state","token","username","console","log","TabNavigation","activeTintColor","inactiveTintColor","tabBarLabel","tabBarOptions","tabBarIcon","tintColor","Component"],"mappings":"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","sourcesContent":["import MenuView from './MenuView';\r\nimport ProfileView from './ProfileView';\r\nimport OrderView from './OrderView';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport React from 'react';\r\nimport { TouchableOpacity, Image, View, Text } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\nclass CombinedViewU extends React.Component\r\n{ constructor(props){\r\n  super(props)\r\n  this.state = {\r\n    token:\"\",\r\n    username:\"\"\r\n  }\r\n\r\n}\r\n  \r\n   render()\r\n   {// The combined view for the User is defined here\r\n  //Three tabs are defined here the first tab being for viewing the given menu code for this can be found in MenuView.js\r\n  //The second tab for viewing the order details this can be found in OrderView.js\r\n  //The third tab for viewing and editing the profile this can be found in ProfileView.js\r\n     console.log(\"the combine view for the user has been called\")\r\n    const TabNavigation = createBottomTabNavigator();\r\n     return(\r\n      <TabNavigation.Navigator\r\n      tabBarOptions={{\r\n        activeTintColor: 'tomato',\r\n        inactiveTintColor: 'gray',\r\n      }}>\r\n        <TabNavigation.Screen\r\n        name=\"MenuView\"\r\n         options={{\r\n          tabBarLabel: 'MenuView',\r\n          tabBarOptions: {\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          },\r\n          \r\n          \r\n        }}\r\n      >\r\n         {props=><MenuView {...props} token={this.props.token} username={this.props.username}/>}\r\n\r\n      </TabNavigation.Screen>\r\n      <TabNavigation.Screen\r\n        name=\"OrderView\"\r\n        options={{\r\n          tabBarLabel: 'OrderView',\r\n        \r\n          tabBarOptions: {\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          },\r\n           tabBarIcon:({tintColor})=>(  \r\n            <Icon name=\"running\" color={tintColor} size={25}/>  \r\n        )  \r\n          \r\n        }}\r\n      >\r\n       \r\n       {props => <OrderView {...props} token={this.props.token} username={this.props.username} />}\r\n\r\n      </TabNavigation.Screen>\r\n      <TabNavigation.Screen\r\n        name=\"ProfileView\"\r\n        options={{\r\n          tabBarLabel: 'ProfileView',\r\n        \r\n          tabBarOptions: {\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          },\r\n           tabBarIcon:({tintColor})=>(  \r\n            <Icon name=\"male\" color={tintColor} size={25}/>  \r\n        )  \r\n          \r\n        }}\r\n      >\r\n       \r\n       {props => <ProfileView {...props} token={this.props.token} username={this.props.username} />}\r\n\r\n      </TabNavigation.Screen>\r\n   </TabNavigation.Navigator>\r\n       \r\n        \r\n      \r\n      \r\n      \r\n      \r\n      );\r\n\r\n\r\n\r\n\r\n   }\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default CombinedViewU;"]},"metadata":{},"sourceType":"module"}